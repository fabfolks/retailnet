$(function(){
  //Cheesecake settings
  var cheesecakeData = {
    container: {
      id: "contacts_cheesecake",
      width: 440,
      height: 440
    },
    grid: {
        id: "contacts_grid",
        divIdPrefix: "actor_",
        maxOpacity: 0.8
    },
    colors : {
      normalSector : {
        background : "#DEEFF8",
        border : "#1F4A75",
        font : "#1F4A75",
        click : "#BDC7D8",
        mouseover : "#D4E4EA",
        mouseup : "#DEEFF8",
        mouseout : "#DEEFF8"
      },
      extraSector : {
        background : "#879EB5",
        border : "#1F4A75",
        font : "#1F4A75",
        click : "#97AEC5",
        mouseover : "#97AEC5",
        mouseup : "#879EB5",
        mouseout : "#879EB5"
      }
    },
    rMax : 200,
    center: {x : 220, y : 220}
  };
  //Adding Cheesecake settings the sectors and users information from social_stream
  cheesecakeData.sectors = <%= raw(current_subject.cheesecake_json) %>.sectors;
  //Cheesecake is created
  var cheese = new socialCheesecake.Cheesecake(cheesecakeData);
  //We dont use synchronized callbacks for focus
  cheese.syncSectorFocusCallbacks = false;
  //Callback when a sector focusing begins
  socialCheesecake.eventCallbackHandlers.onSectorFocusBegin = function(cheesecake,callback){
    if((cheese.highlightedSector)&&(cheese.highlightedSector.auxiliar)){
      $("#sector_editor").data("prepare")(cheese);
      $("#sector_editor").data("show")();
    }else{
      $("#contacts_grid_available").fadeOut("fast", callback);      
    }
  };
  //Callback when a sector focusing ends
  socialCheesecake.eventCallbackHandlers.onSectorFocusEnd = function(cheesecake){
    if((cheese.highlightedSector)&&(cheese.highlightedSector.auxiliar)){
      
    }else{
      $("#contacts_grid_available").fadeIn("fast");
      $("#edit_sector_button").on("click.edit", cheese, $("#edit_sector_button").data("edit_sector_click"));
      $("#edit_sector_button").fadeIn("fast");
    }
  };
  //Callback when a sector unfocusing begins
  socialCheesecake.eventCallbackHandlers.onSectorUnfocusBegin = function(cheesecake,callback){
    if((cheese.highlightedSector)&&(cheese.highlightedSector.auxiliar)){
      
    }else{
      $("#contacts_grid_available").fadeOut("fast", callback);
      $("#edit_sector_button").off("click");
      $("#edit_sector_button").fadeOut("fast");
    }
  };
  //Callback when a sector unfocusing ends
  socialCheesecake.eventCallbackHandlers.onSectorUnfocusEnd = function(cheesecake){
    if((cheese.highlightedSector)&&(cheese.highlightedSector.auxiliar)){
      
    }else{
      $("#contacts_grid_available").fadeIn("fast");      
    }
    if($("#sector_editor").width() > 0){
      $("#edit_sector_button").html("<%= escape_javascript image_tag "btn/cheese_edit.png" %>");
      $("#sector_editor").data("hide")();
    }
  };
  //Callback when adding a new subsector begins
  socialCheesecake.eventCallbackHandlers.onSubsectorAddedBegin = function(subsector){
    var cheesecake = subsector.getCheesecake();
    $("#edit_sector_button").off("click.edit");
    $("#edit_sector_button").fadeOut("fast",function(){
      $("#edit_sector_button").html("<%= escape_javascript image_tag "btn/cheese_close_edit.png" %>");
      $("#edit_sector_button").fadeIn("fast");
    });
    $("#sector_editor").data("prepare")(cheesecake, subsector, true);
    $("#sector_editor").data("show")(function(){
      $("#edit_sector_button").on("click.close_edit", cheesecake, $("#edit_sector_button").data("close_edit_sector_click"));
    });
    $(".subsector .content").each(function(){
        if($(this).is(':visible')){
          $(this).stop().slideToggle(500);
        }
    });
    $("#sector_editor").data("prepare")(cheesecake,subsector,false);
    $(".add_subsector").each(function(){
      $(this).off("click");
    });
  };
  //Callback when adding a new subsector ends
  socialCheesecake.eventCallbackHandlers.onSubsectorAddedEnd = function(subsector){
    $("#sector_editor").data("prepare")(subsector.getCheesecake(),subsector,false);
  };
  $("#contacts_filter_input").keyup(function(){
    cheese.filter($("#contacts_filter_input").val());
    //TODO: Make users unfiltered visible again
  });
  //Callback when any change is made (added peopel, removed, edited or added secto, etc)
  //This updates the changes hiddend field (sent when saving changes) and the detailed
  //changes display
  socialCheesecake.eventCallbackHandlers.onChange = function(cheesecake){
    var initial = cheesecake.getInitialState();
    var changes = cheesecake.getChanges();
    if((changes.actors)&&(changes.actors.length==0)&&(changes.sectors)&&(changes.sectors.length==0)&&(changes.subsectors)&&(changes.subsectors.length==0)){
      $("#contacts_changes_button").hide();
      $("#contacts_save").hide();
    }else{
      $("#contacts_changes_button").show();
      $("#contacts_save").show();
      var total = 0;
      if(changes.actors)
          total += changes.actors.length;
      if(changes.sectors)
          total += changes.sectors.length;
      if(changes.subsectors)
          total += changes.subsectors.length;
      $("#contacts_changes_button_total").html(total);
    }
    var changes_html = "";
    var actors = changes.actors;
    $("#contacts_save_changes").val(JSON.stringify(changes));
    for(var i in actors){
      actor = actors[i];
      if(actor.justAdded){
        var new_subsectors = actor.subsectors;
        var new_subsectors_string = "";
        for(var i in new_subsectors){
          if(i > 0) new_subsectors_string += ", ";
          new_subsectors_string += cheesecake.getSubsectorById(new_subsectors[i]).label;
        }
        changes_html += "<div class=\"change_added\">" + actor.name + " has been removed from " + old_subsectors_string + "</div>";
      }else if(actor.subsectors.length==0){
        var old_subsectors = [];
        var old_subsectors_string = "";
        for(var i in initial.actors){
          if(actor.id==initial.actors[i].id){
            old_subsectors = initial.actors[i].subsectors;
            break;
          }
        }
        for(var i in old_subsectors){
          if(i > 0) old_subsectors_string += ", ";
          old_subsectors_string += cheesecake.getSubsectorById(old_subsectors[i]).label;
        }
        changes_html += "<div class=\"change_deleted\">" + actor.name + " has been removed from " + old_subsectors_string + "</div>";
      }else{
        var old_subsectors = [];
        var new_subsectors = actor.subsectors;
        var left_subsectors = "";
        var joined_subsectors = "";
        for(var i in initial.actors){
          if(actor.id==initial.actors[i].id){
            old_subsectors = initial.actors[i].subsectors;
            break;
          }
        }
        for(var i in old_subsectors){
          if(new_subsectors.indexOf(old_subsectors[i])==-1){
            if(left_subsectors.length!=0){
              left_subsectors += ", ";
            }
            left_subsectors += cheesecake.getSubsectorById(old_subsectors[i]).label;
          }
        }
        for(var i in new_subsectors){
          if(old_subsectors.indexOf(new_subsectors[i])==-1){
            if(joined_subsectors.length!=0){
              joined_subsectors += ", ";
            }
            joined_subsectors += cheesecake.getSubsectorById(new_subsectors[i]).label;
          }
        }
        if((joined_subsectors.length!=0)&&(left_subsectors.length!=0)){
          changes_html += "<div class=\"change_modified\">" + actor.name + " has been removed from " + left_subsectors + " and added to " + joined_subsectors + "</div>";
        }else if(joined_subsectors.length!=0){
          changes_html += "<div class=\"change_added\">" + actor.name + " has been added to " + joined_subsectors + "</div>";
        }else{
          changes_html += "<div class=\"change_deleted\">" + actor.name + " has been removed from " + left_subsectors + "</div>";  
        }
      }
    }
    $("#contacts_changes_details").html(changes_html);
  }  
  //Tipsy for displaying detailed changes
  $('#contacts_changes_button').tipsy({
    delayIn: 0,
    delayOut: 0,
    gravity: 'se',
    opacity: 1,
    trigger: 'manual',
    className: 'contacts_changes_tipsy_menu',
    html: true,
    hoverable: true,
    title: function(){
      return $('#contacts_changes').html();
    }
  });
  $("#contacts_save_changes").val(JSON.stringify(cheese.getChanges()));
  $("#contacts_save_form").off("submit.disable");
  $("#contacts_save_form").on("submit.disable",function(){    
    if($(".contacts_changes_tipsy_menu").length != 0){
      $("#contacts_changes_button").tipsy("hide");
    }
    $("#contacts_grid_saving").show();
    cheese.disable();
    $("#contacts_save_button").val("<%= t('cheesecake.changes.saving') %>").attr("disabled","true");
  });
});      